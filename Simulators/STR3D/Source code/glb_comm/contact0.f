      SUBROUTINE CONTACT0(KK,RR,ITO)

      USE MPI_PARAM
      USE M_VAL
      USE M_PART

      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION KK(*),RR(*)
      INTEGER, POINTER :: ISLV0O(:,:),ISLVPO(:)
      REAL(8), POINTER :: POSW(:,:),SNRM(:,:),SNRMW(:,:)

      NNOD = KK(8)
      NBDY = KK(92)
      NIGSF = KK(94)
      IFMDL = KK(96)
      NIELC = KK(97)
      NINDC0 = KK(102)

      EPSS = RR(12)

      NPECG = NPROCS - 1

      ALLOCATE( POSO(3,NNOD) )
      ALLOCATE( POS(3,NNOD+NIGSF) )
      ALLOCATE( RFCI(6,NNOD) )

      CALL GATHER_NODAL_D(POSO,3)
      CALL GATHER_NODAL_D(POS,3)
      CALL GATHER_NODAL_D(RFCI,6)

      CALL GSURFQ(POS(1,NNOD+1),3,NIGSF,POS,IELQ,IVRQ(NNOD+1))

      ALLOCATE( POSW(3,SIZE(NODC,1)) )

      DO IP = 1, NPECG
        N = NN_EXTC(IP)
        IF( N > 0 ) THEN
          POSW(:,1:N) = POS(:,NODC(1:N,IP))
          CALL M_MPI_SEND_D(POSW,3*N,IP)
        ENDIF
      ENDDO

      DEALLOCATE( POSW )

      ALLOCATE( PSLV(3,4,NINDC0) )

      PSLV(:,1,:) = POSO(:,INDC0(:))
      PSLV(:,2,:) = POS(:,INDC0(:))
      PSLV(:,3,:) = -RFCI(1:3,INDC0(:))

      ALLOCATE( SNRM(3,NINDC0) )
      ALLOCATE( SNRMW(3,NNOD+NIGSF) )

      CALL SLVNRM(SNRM,SNRMW,NNOD,NIGSF,NIELC,NINDC0,IELC,INDC0,POS)

      PSLV(:,4,:) = SNRM(:,:)

      DEALLOCATE( POSO )
      DEALLOCATE( POS )
      DEALLOCATE( RFCI )

      DEALLOCATE( SNRM )
      DEALLOCATE( SNRMW )

      CALL M_MPI_BCAST_D(PSLV,12*NINDC0)

      DEALLOCATE( PSLV )

      DO I = 1, NINDC0
        IF( ISLV0(1,I) > 10 ) ISLV0(1,I) = ISLV0(1,I) - 10
      ENDDO

      ALLOCATE( ISLV0O(2,NINDC0) )
      ALLOCATE( ISLVPO(NINDC0) )
      ALLOCATE( RSLV0(3,NINDC0) )

      ISLV0O(:,:) = ISLV0(:,:)
      ISLVPO(:) = ISLVP(:)

      CALL ISLV_UPDT(ISLV0,ISLVP,RSLV0,NNOD,NINDC0,NPECG,NN_EXT,NN_EXTC
     &              ,NOD,SIZE(NOD,1),NODG,SIZE(NODG,1),NODP,IEG
     &              ,SIZE(IEG,1),IEDGP,IEC,SIZE(IEC,1),IELCP,INDC0,IEDG
     &              ,IELC,IELQ,IFCQ,IEDQ,IVRQ)

      CALL M_MPI_RECV_I(ISTEP,1,1)
      CALL M_MPI_RECV_I(ITER2,1,1)
      CALL M_MPI_RECV_I(MAXITER2,1,1)
      CALL M_MPI_RECV_I(IDYN,1,1)

      CALL ISTCHK0(ICONV2,NNOD,NINDC0,INDG,IELC,INDC0,IEDG,ISLV0
     &            ,ISLV0O,ISLVP,ISLVPO,NN_EXT,NN_EXTC,NOD,SIZE(NOD,1)
     &            ,NODG,SIZE(NODG,1),IEG,SIZE(IEG,1),IEC,SIZE(IEC,1)
     &            ,ISTEP,ITER2,MAXITER2,ITO)

      CALL M_MPI_BCAST_I(ICONV2,1)

      DEALLOCATE( ISLVPO )

      ALLOCATE( IFRIC(10,NINDC0) )
      ALLOCATE( FRIC(10,NINDC0) )
      ALLOCATE( U0(3,4,NINDC0) )
      ALLOCATE( RL0(3,NINDC0) )

      IF( IFMDL == 2 )
     &  CALL FRIC_UPDT(IFRIC,FRIC,U0,RL0,NPECG,SIZE(INC,1),NINC,INC
     &                ,INDCP)

      IF( IFMDL > 0 ) 
     &  CALL FRICCHK0(IFRIC,FRIC,NBDY,NINDC0,ICBD,INDA0,IEDA,ISLV0
     &               ,ISLV0O,FRTB,EDML,ISLVP,IEG,SIZE(IEG,1),IEC
     &               ,SIZE(IEC,1),ITO)

      IF( IFMDL == 2 )
     &  CALL STICKCHK0(IFRIC,ISTK,NBDY,NINDC0,ICBD,INDA0,ISLV0,ISLV0O
     &                ,FRIC,ISLVP,IEC,SIZE(IEC,1),EPSS,ITER2,MAXITER2
     &                ,ICONV2,IDYN,ITO)

      DEALLOCATE( ISLV0O )

      IF( IFMDL == 2 ) THEN
        ALLOCATE( ISTICK(NINDC0) )
        ISTICK(:) = IFRIC(3,:)
        CALL M_MPI_BCAST_I(ISTICK,NINDC0)
        DEALLOCATE( ISTICK )
      ENDIF

      END